[project]
name = "novel-downloader"
description = "A command-line tool for downloading Chinese web novels from Qidian and similar platforms."
authors = [
    { name = "Saudade Z", email = "saudadez217@gmail.com" }
]
license = {file = "LICENSE"}
readme = {file = "README.md", content-type = "text/markdown"}
requires-python = ">=3.11"
keywords = ["novel", "web novel", "qidian", "biquge", "ebook"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: Chinese (Simplified)",
    "Topic :: Utilities",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13"
]
dynamic = ["version"]
dependencies = [
    "rich",
    "nicegui",
    "requests",
    "aiohttp",
    "lxml",
    "platformdirs",
]

[project.optional-dependencies]
font-recovery = [
    "brotli",
    "numpy",
    "fonttools",
    "pillow",
]

dev = [
    "black",
    "mypy",
    "ruff",
    "pytest",
    "pytest-cov",
    "pytest-mock",
    "types-requests",
    "types-lxml",
    "types-PyYAML",
    "pre-commit",
    "commitizen"
]

[project.scripts]
novel-cli = "novel_downloader.cli.main:cli_main"
novel-web = "novel_downloader.web.main:web_main"

[project.urls]
Homepage = "https://github.com/saudadez21/novel-downloader"
Source = "https://github.com/saudadez21/novel-downloader"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]
include = ["novel_downloader", "novel_downloader.*"]

[tool.setuptools.package-data]
"novel_downloader.resources.config" = ["*.toml"]
"novel_downloader.resources.text" = ["*.txt"]
"novel_downloader.resources.js_scripts" = ["*.js"]
"novel_downloader.resources.json" = ["*.json"]
"novel_downloader.locales" = ["*.json"]
"novel_downloader.resources.css_styles" = ["*.css"]
"novel_downloader.resources.images" = ["*.png"]

[tool.setuptools.dynamic]
version = {attr = "novel_downloader.__version__"}

[tool.black]
line-length = 88
target-version = ["py312"]

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle (error)
    "F",  # pyflakes
    "B",  # bugbear
    "C4", # flake8-comprehensions
    "I",  # isort
    "UP", # pyupgrade
    "SIM" # flake8-simplify
]

[tool.mypy]
python_version = "3.12"
ignore_missing_imports = true
strict = true

[tool.pytest.ini_options]
minversion = "7.1"
addopts = "--strict-markers"
pythonpath = ["src"]
testpaths = ["tests"]

[tool.commitizen]
name = "cz_conventional_commits"
version = "2.2.0"
version_files = [
    "src/novel_downloader/__init__.py"
]
update_changelog_on_bump = true
changelog_file = "CHANGELOG.md"
changelog_incremental = true
tag_format = "v$version"
bump_message = "chore(release): bump version to $new_version"
